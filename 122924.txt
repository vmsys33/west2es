11-35164644
vb48gointomasterlevel@gmail.com
11111111

11-35164644



Hereâ€™s a step-by-step guide on where to place the codes for your Pending Users functionality:

1. fetch_pending_users.php
This file should be placed in a folder where backend files are typically located. For example:

Folder: functions/
Path: functions/fetch_pending_users.php
2. update_user_status.php
This file handles updating the user's status in the database. Place it in the same folder as the fetch_pending_users.php file:

Folder: functions/
Path: functions/update_user_status.php
3. Frontend Code
This code will go into the HTML file where the Pending Users Table is displayed. For example:

If your main file is pending-users.php, place the HTML for the table and JavaScript for AJAX in this file.
Updated pending-users.php
Place this HTML for the table where you want to display it:

html
Copy code
<div class="col-md-9 main-content">
    <h3 class="mb-3">Pending Users</h3>
    <div class="table-responsive">
        <table class="table table-bordered" id="pendingUsersTable">
            <thead>
                <tr>
                    <th>DEPED No</th>
                    <th>Last Name</th>
                    <th>First Name</th>
                    <th>Middle Name</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be dynamically loaded here -->
            </tbody>
        </table>
    </div>
</div>
JavaScript for Loading and Updating Users
Place the JavaScript at the end of your HTML file, just before the closing </body> tag or in a shared file like footer.php (if itâ€™s included across all pages).

html
Copy code
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const loadPendingUsers = () => {
        fetch('functions/fetch_pending_users.php')
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    const tbody = document.querySelector('#pendingUsersTable tbody');
                    tbody.innerHTML = ''; // Clear the table body
                    data.data.forEach(user => {
                        const row = `
                            <tr>
                                <td>${user.deped_id_no}</td>
                                <td>${user.last_name}</td>
                                <td>${user.first_name}</td>
                                <td>${user.middle_name}</td>
                                <td>${user.email}</td>
                                <td>
                                    <button class="btn btn-success btn-sm activate-user" data-id="${user.id}">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    <button class="btn btn-danger btn-sm delete-user" data-id="${user.id}">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        `;
                        tbody.insertAdjacentHTML('beforeend', row);
                    });
                } else {
                    console.error(data.message);
                }
            })
            .catch(error => console.error('Error fetching pending users:', error));
    };

    // Load the data when the page loads
    loadPendingUsers();

    // Event delegation for handling activate button click
    document.querySelector('#pendingUsersTable tbody').addEventListener('click', function (e) {
        if (e.target.closest('.activate-user')) {
            const userId = e.target.closest('.activate-user').getAttribute('data-id');
            toggleUserStatus(userId, 'active');
        }
    });

    // Function to toggle user status
    const toggleUserStatus = (userId, status) => {
        fetch('functions/update_user_status.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId, status })
        })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message
                    }).then(() => {
                        loadPendingUsers(); // Refresh the table
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            })
            .catch(error => console.error('Error updating user status:', error));
    };
});
</script>
4. Database Connection
Both fetch_pending_users.php and update_user_status.php rely on the database connection file (db_connection.php). Ensure this file is placed in an accessible location (e.g., functions/db_connection.php).

File Structure Example
Your project structure should look like this:

bash
Copy code
project/
â”‚
â”œâ”€â”€ functions/
â”‚   â”œâ”€â”€ db_connection.php
â”‚   â”œâ”€â”€ fetch_pending_users.php
â”‚   â”œâ”€â”€ update_user_status.php
â”‚
â”œâ”€â”€ pages/
â”‚   â”œâ”€â”€ pending-users.php
â”‚
â”œâ”€â”€ assets/
â”‚   â”œâ”€â”€ js/
â”‚   â”‚   â”œâ”€â”€ main.js (if you separate JS into files)
â”‚   â”œâ”€â”€ css/
â”‚
â””â”€â”€ index.php
5. Include SweetAlert2 and FontAwesome
Ensure you include the required libraries:

SweetAlert2: For notifications.
FontAwesome: For the icons.
Add the following <script> and <link> tags to your <head> or footer.php:

html
Copy code
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- FontAwesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
Final Integration
fetch_pending_users.php:

Fetches data with a status of pending.
update_user_status.php:

Updates the status field to active.
JavaScript:

Dynamically populates the table and handles status updates with SweetAlert2 notifications.
Let me know if you need help with any step! ðŸ˜Š
